{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","components/informatii/Informatie.js"],"names":["createSvgIcon","React","d","withStyles","theme","root","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","className","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","Informatie","useState","info","setInfo","categorii","setCategorii","docs","setDocs","denin","setDenin","categorie","useParams","informatie","useEffect","incarcaInformatiiStudenti","incarcaRaspunsIntrebareIS","r","content","maxWidth","id","style","marginTop","container","direction","justify","position","item","xs","textAlign","aria-label","to","variant","smDown","md","link","toLowerCase","fontWeight","transition","titlu","gutterBottom","intrebare","raspuns","dangerouslySetInnerHTML","__html","marginBottom","paddingTop","borderTop","Array","isArray","append","tip_fisier","href","url","denumire"],"mappings":"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","file":"static/js/12.18a4bd85.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React, { useEffect, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport {\r\n  incarcaInformatiiStudenti,\r\n  incarcaRaspunsIntrebareIS,\r\n} from '../reuse/API';\r\nimport { Hidden } from '@material-ui/core';\r\nimport Helmet from 'react-helmet';\r\nimport Loader from '../Loader/Loader';\r\nimport './informatii.css';\r\n\r\nconst Informatie = () => {\r\n  const [info, setInfo] = useState('');\r\n\r\n  const [categorii, setCategorii] = useState([]);\r\n  const [docs, setDocs] = useState([]);\r\n  const [denin, setDenin] = useState([]);\r\n\r\n  let { categorie } = useParams();\r\n  let { informatie } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (categorii.length == 0) {\r\n      incarcaInformatiiStudenti(setCategorii);\r\n    }\r\n    incarcaRaspunsIntrebareIS(informatie, setDocs, setInfo, (r) => {\r\n      setDenin(r);\r\n    });\r\n  }, [informatie]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`OSUT - Info studenți`}</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Diverse informații privind parcursul academic al unui student la Universitatea de Vest din Timișoara (UVT).\"\r\n        />\r\n      </Helmet>\r\n\r\n      <Container maxWidth=\"lg\" id=\"centru_ajutor\" style={{ marginTop: '20px' }}>\r\n        <Grid\r\n          container\r\n          spacing={4}\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          style={{ position: 'relative' }}>\r\n          {info === '' ? (\r\n            <Grid item xs={12} style={{ textAlign: 'center' }}>\r\n              <Loader />\r\n              Se încarcă...\r\n            </Grid>\r\n          ) : (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link color=\"inherit\" to=\"/info-studenti\">\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      variant=\"body1\"\r\n                      component=\"span\">\r\n                      Informații studenți\r\n                    </Typography>\r\n                  </Link>\r\n                  <Link color=\"inherit\" to={'/info-studenti/' + categorie}>\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      variant=\"body1\"\r\n                      component=\"span\">\r\n                      {denin}\r\n                    </Typography>\r\n                  </Link>\r\n                </Breadcrumbs>\r\n              </Grid>\r\n              <Hidden smDown>\r\n                <Grid item xs={12} md={3}>\r\n                  <div className=\"sticky\">\r\n                    {categorii.length !== 0 &&\r\n                      categorii.map((item) => (\r\n                        <>\r\n                          <Link\r\n                            key={item.id}\r\n                            to={'/info-studenti/' + item.link}\r\n                            style={{ color: 'inherit' }}>\r\n                            <Typography\r\n                              color=\"textPrimary\"\r\n                              variant=\"h5\"\r\n                              component=\"h5\"\r\n                              color={\r\n                                item.link.toLowerCase() ==\r\n                                categorie.toLowerCase()\r\n                                  ? 'primary'\r\n                                  : 'default'\r\n                              }\r\n                              gutterBottom\r\n                              style={{\r\n                                fontWeight: 400,\r\n                                transition: 'background .1s',\r\n                              }}>\r\n                              {item.titlu}\r\n                            </Typography>\r\n                          </Link>\r\n                        </>\r\n                      ))}\r\n                  </div>\r\n                </Grid>\r\n              </Hidden>\r\n              <Grid item xs={12} md={9}>\r\n                <div className=\"whitebg\">\r\n                  {info !== '' && (\r\n                    <>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"h4\"\r\n                        component=\"h3\"\r\n                        gutterBottom\r\n                        style={{\r\n                          fontWeight: 100,\r\n                        }}>\r\n                        {info.intrebare}\r\n                      </Typography>\r\n                      <Helmet>\r\n                        <title>{`${info.intrebare} - Info studenți - OSUT`}</title>\r\n                        <meta name=\"description\" content={info.raspuns} />\r\n                      </Helmet>\r\n                      <Typography\r\n                        color=\"textSecondary\"\r\n                        variant=\"body1\"\r\n                        component=\"p\"\r\n                        id=\"infoStudentiText\"\r\n                        style={{ maxWidth: '75ch' }}\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: info.raspuns,\r\n                        }}\r\n                        gutterBottom></Typography>\r\n                    </>\r\n                  )}\r\n                  <div\r\n                    style={\r\n                      docs.length > 0\r\n                        ? {\r\n                            marginBottom: 0,\r\n                            paddingTop: '20px',\r\n                            borderTop: '1px solid rgba(160,160,160,.1)',\r\n                          }\r\n                        : {}\r\n                    }>\r\n                    {Array.isArray(docs) && docs.length > 0 && (\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"h6\"\r\n                        component=\"h6\"\r\n                        gutterBottom\r\n                        style={{\r\n                          fontWeight: 100,\r\n                        }}>\r\n                        Atașamente:\r\n                      </Typography>\r\n                    )}\r\n                    {Array.isArray(docs) &&\r\n                      docs.length > 0 &&\r\n                      docs.map((item) => {\r\n                        let append =\r\n                          ' <small>(' + item.tip_fisier + ')</small>';\r\n\r\n                        return (\r\n                          <>\r\n                            <a\r\n                              className=\"atasamentInfo\"\r\n                              href={\r\n                                'https://api.osut.ro/media/docs/' + item.url\r\n                              }>\r\n                              <Typography\r\n                                variant=\"body1\"\r\n                                color=\"textSecondary\"\r\n                                dangerouslySetInnerHTML={{\r\n                                  __html: item.denumire + '' + append,\r\n                                }}></Typography>\r\n                            </a>\r\n                          </>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Informatie;\r\n"],"sourceRoot":""}